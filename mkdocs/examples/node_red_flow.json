[
    {
        "id": "mkdocs_rebuild_flow",
        "type": "tab",
        "label": "MkDocs Rebuild",
        "disabled": false,
        "info": ""
    },
    {
        "id": "mkdocs_manual_trigger",
        "type": "inject",
        "z": "mkdocs_rebuild_flow",
        "name": "Manual Rebuild",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{}",
        "payloadType": "json",
        "x": 120,
        "y": 100,
        "wires": [
            [
                "mkdocs_http_request"
            ]
        ]
    },
    {
        "id": "mkdocs_scheduled_trigger",
        "type": "inject",
        "z": "mkdocs_rebuild_flow",
        "name": "Daily Rebuild",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "0 2 * * *",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{}",
        "payloadType": "json",
        "x": 120,
        "y": 160,
        "wires": [
            [
                "mkdocs_http_request"
            ]
        ]
    },
    {
        "id": "mkdocs_http_request",
        "type": "http request",
        "z": "mkdocs_rebuild_flow",
        "name": "Trigger MkDocs Rebuild",
        "method": "POST",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "http://localhost:8081/rebuild",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "senderr": false,
        "x": 370,
        "y": 130,
        "wires": [
            [
                "mkdocs_response_handler"
            ]
        ]
    },
    {
        "id": "mkdocs_response_handler",
        "type": "function",
        "z": "mkdocs_rebuild_flow",
        "name": "Handle Response",
        "func": "if (msg.payload.status === 'success') {\n    node.status({fill:\"green\",shape:\"dot\",text:\"Rebuild started\"});\n    msg.payload = {\n        title: \"MkDocs\",\n        message: \"Documentation rebuild started\",\n        data: {\n            tag: \"mkdocs_rebuild\"\n        }\n    };\n} else {\n    node.status({fill:\"red\",shape:\"dot\",text:\"Rebuild failed\"});\n    msg.payload = {\n        title: \"MkDocs Error\",\n        message: \"Failed to start rebuild\",\n        data: {\n            tag: \"mkdocs_error\"\n        }\n    };\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 590,
        "y": 130,
        "wires": [
            [
                "mkdocs_notification"
            ]
        ]
    },
    {
        "id": "mkdocs_notification",
        "type": "api-call-service",
        "z": "mkdocs_rebuild_flow",
        "name": "Send Notification",
        "server": "",
        "version": 5,
        "debugenabled": false,
        "domain": "notify",
        "service": "persistent_notification",
        "areaId": [],
        "deviceId": [],
        "entityId": [],
        "data": "{\"title\": payload.title, \"message\": payload.message}",
        "dataType": "jsonata",
        "mergeContext": "",
        "mustacheTemplate": false,
        "outputProperties": [],
        "queue": "none",
        "x": 800,
        "y": 130,
        "wires": [
            []
        ]
    }
]