#!/usr/bin/with-contenv bashio
# shellcheck shell=bash
# ==============================================================================
# Setup nginx configuration with dynamic port
# ==============================================================================

declare ingress_port

# Get the configured ingress port from add-on options (defaults managed by HA)
ingress_port=$(bashio::addon.ingress_port)

bashio::log.info "Configure nginx"
# NGinx needs this file to be able to start.
# It will not continously log into it.
mkdir -p /var/lib/nginx/logs
touch /var/lib/nginx/logs/error.log
chmod 777 /var/lib/nginx/logs/error.log


# Generate nginx configuration with the correct port
cat > /etc/nginx/nginx.conf << EOF
user root;
worker_processes auto;
pid /var/run/nginx.pid;

events {
    worker_connections 1024;
    use epoll;
    multi_accept on;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    # Logging
    access_log /tmp/access.log;
    error_log /tmp/error.log;
    client_body_temp_path /tmp/client_body;
    proxy_temp_path /tmp/proxy;
    fastcgi_temp_path /tmp/fastcgi;
    uwsgi_temp_path /tmp/uwsgi;
    scgi_temp_path /tmp/scgi;


    # Performance
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;
    server_tokens off;

    # Gzip compression
    gzip on;
    gzip_vary on;
    gzip_comp_level 6;
    gzip_min_length 1000;
    gzip_proxied any;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/json
        application/javascript
        application/xml+rss
        application/atom+xml
        image/svg+xml;

    # Security headers
    add_header X-Frame-Options SAMEORIGIN always;
    add_header X-Content-Type-Options nosniff always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy strict-origin-when-cross-origin always;

    # Single server for both Ingress and direct access
    server {
        listen ${ingress_port} default_server;
        server_name _;

        root /var/www/html;
        index index.html;

        location / {
            try_files \$uri \$uri/ =404;
            location ~* \.(css|js|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
                expires 30d;
                add_header Cache-Control "public, immutable";
            }
        }

        error_page 404 /404.html;
        location = /404.html { internal; }

    location /health { access_log off; return 200 "healthy\n"; add_header Content-Type text/plain; }
    }
}
EOF
bashio::log.info "Nginx configured"